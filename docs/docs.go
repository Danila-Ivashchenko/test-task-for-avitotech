// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/history": {
            "post": {
                "description": "returl url of a file with user's fistory in csv format",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "history"
                ],
                "summary": "return history of a user",
                "operationId": "get-history",
                "parameters": [
                    {
                        "description": "user_id, month, year",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.HistoryOfUserGetDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.HistoryResponce"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.badResponse"
                        }
                    }
                }
            }
        },
        "/segment": {
            "put": {
                "description": "rename a segment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "segment"
                ],
                "summary": "rename a segment",
                "operationId": "update-segmets",
                "parameters": [
                    {
                        "description": "id and new name of a segment",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.SegmentUpdateDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Segment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.badResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "add a segment to the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "segment"
                ],
                "summary": "add a segment",
                "operationId": "get-segment",
                "parameters": [
                    {
                        "description": "segment name",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.SegmentAddDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Segment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.badResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete a segment from the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "segment"
                ],
                "summary": "delete a segment",
                "operationId": "del-segmet",
                "parameters": [
                    {
                        "description": "segment name",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.SegmentName"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Segment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.badResponse"
                        }
                    }
                }
            }
        },
        "/segment/all": {
            "get": {
                "description": "return all segments",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "segment"
                ],
                "summary": "get all segments",
                "operationId": "get-segmets",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Segment"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.badResponse"
                        }
                    }
                }
            }
        },
        "/user": {
            "post": {
                "description": "if some users are registered? they will be ignored",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "add users",
                "operationId": "add-users",
                "parameters": [
                    {
                        "description": "users ids",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.UsersIds"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.UserAffected"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.badResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "if some users aren't registered they will be ignored",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "delete users",
                "operationId": "delete-users",
                "parameters": [
                    {
                        "description": "users ids",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.UsersIds"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.UserAffected"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.badResponse"
                        }
                    }
                }
            }
        },
        "/user/get": {
            "post": {
                "description": "return users with limit, offset, random params",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "get users with limit offset",
                "operationId": "get-users",
                "parameters": [
                    {
                        "description": "limit offset of users",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.LinitOffset"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.UsersIds"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.badResponse"
                        }
                    }
                }
            }
        },
        "/user/get/percent": {
            "post": {
                "description": "return percent of random users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "get percent of users",
                "operationId": "get-percent-users",
                "parameters": [
                    {
                        "description": "percent of users",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.UsersGetPercentDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.UsersIds"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.badResponse"
                        }
                    }
                }
            }
        },
        "/user_in_segment": {
            "delete": {
                "description": "delete users from segments by names",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user-in-segment"
                ],
                "summary": "delete users from segments",
                "operationId": "delete-users-from-segments",
                "parameters": [
                    {
                        "description": "users ids and segments names",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.UserFromSegmentsDeleteDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.successResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.badResponse"
                        }
                    }
                }
            }
        },
        "/user_in_segment/add/many": {
            "post": {
                "description": "bind users by ids and segments by names",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user-in-segment"
                ],
                "summary": "bind users and segments",
                "operationId": "add-users-to-segments",
                "parameters": [
                    {
                        "description": "users ids and segments names",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.UsersToSegmentsAddDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.successResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.badResponse"
                        }
                    }
                }
            }
        },
        "/user_in_segment/add/one": {
            "post": {
                "description": "bind user by id and segments by names",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user-in-segment"
                ],
                "summary": "bind user and segments",
                "operationId": "add-user-to-segments",
                "parameters": [
                    {
                        "description": "user id and segments names",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.UserToSegmentsAddDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.successResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.badResponse"
                        }
                    }
                }
            }
        },
        "/user_in_segment/add/params": {
            "post": {
                "description": "bind users by limit/offset and segments by names",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user-in-segment"
                ],
                "summary": "bind users and segments",
                "operationId": "add-users-limit-offset-to-segments",
                "parameters": [
                    {
                        "description": "limit, offset, random for getting users and segments names",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.UsersWithLimitOffsetToSegments"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.successResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.badResponse"
                        }
                    }
                }
            }
        },
        "/user_in_segment/add/percent": {
            "post": {
                "description": "bind users by percent and segments by names",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user-in-segment"
                ],
                "summary": "bind users and segments",
                "operationId": "add-users-percent-to-segments",
                "parameters": [
                    {
                        "description": "percent of users and segments names",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.PercentOfUsersToSegmentsDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.successResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.badResponse"
                        }
                    }
                }
            }
        },
        "/user_in_segment/get/segment": {
            "post": {
                "description": "get users in segments",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user-in-segment"
                ],
                "summary": "get users in segments",
                "operationId": "get-users-in-segment",
                "parameters": [
                    {
                        "description": "segment name",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.SegmentName"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.successResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.badResponse"
                        }
                    }
                }
            }
        },
        "/user_in_segment/get/user": {
            "post": {
                "description": "get user's segments",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user-in-segment"
                ],
                "summary": "get user's segments",
                "operationId": "get-segment-of-user",
                "parameters": [
                    {
                        "description": "users id",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.UserId"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.successResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.badResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.HistoryOfUserGetDTO": {
            "type": "object",
            "properties": {
                "month": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "integer"
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "domain.HistoryResponce": {
            "type": "object",
            "properties": {
                "url": {
                    "type": "string"
                }
            }
        },
        "domain.LinitOffset": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                },
                "random": {
                    "type": "boolean"
                }
            }
        },
        "domain.PercentOfUsersToSegmentsDTO": {
            "type": "object",
            "properties": {
                "percent": {
                    "type": "number"
                },
                "segment_names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "domain.Segment": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "domain.SegmentAddDTO": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "domain.SegmentName": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "domain.SegmentUpdateDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "new_name": {
                    "type": "string"
                }
            }
        },
        "domain.UserAffected": {
            "type": "object",
            "properties": {
                "affected": {
                    "type": "integer"
                },
                "ignored": {
                    "type": "integer"
                }
            }
        },
        "domain.UserFromSegmentsDeleteDTO": {
            "type": "object",
            "properties": {
                "segment_names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "domain.UserId": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "domain.UserToSegmentsAddDTO": {
            "type": "object",
            "properties": {
                "segment_names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "domain.UsersGetPercentDTO": {
            "type": "object",
            "properties": {
                "percent": {
                    "type": "number"
                }
            }
        },
        "domain.UsersIds": {
            "type": "object",
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "domain.UsersToSegmentsAddDTO": {
            "type": "object",
            "properties": {
                "segment_names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "user_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "domain.UsersWithLimitOffsetToSegments": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                },
                "random": {
                    "type": "boolean"
                },
                "segment_names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "handler.badResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "handler.successResponse": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "segment-service",
	Description:      "API Server for work with segments and users",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
