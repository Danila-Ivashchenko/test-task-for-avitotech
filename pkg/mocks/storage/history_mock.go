// Code generated by MockGen. DO NOT EDIT.
// Source: internal/core/ports/storage/history.go

// Package mock_storage is a generated GoMock package.
package mock_storage

import (
	reflect "reflect"
	domain "segment-service/internal/core/domain"

	gomock "github.com/golang/mock/gomock"
	context "golang.org/x/net/context"
)

// MockHistoryStorage is a mock of HistoryStorage interface.
type MockHistoryStorage struct {
	ctrl     *gomock.Controller
	recorder *MockHistoryStorageMockRecorder
}

// MockHistoryStorageMockRecorder is the mock recorder for MockHistoryStorage.
type MockHistoryStorageMockRecorder struct {
	mock *MockHistoryStorage
}

// NewMockHistoryStorage creates a new mock instance.
func NewMockHistoryStorage(ctrl *gomock.Controller) *MockHistoryStorage {
	mock := &MockHistoryStorage{ctrl: ctrl}
	mock.recorder = &MockHistoryStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHistoryStorage) EXPECT() *MockHistoryStorageMockRecorder {
	return m.recorder
}

// AddHistory mocks base method.
func (m *MockHistoryStorage) AddHistory(dto *domain.HistoryAddDTO) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "AddHistory", dto)
}

// AddHistory indicates an expected call of AddHistory.
func (mr *MockHistoryStorageMockRecorder) AddHistory(dto interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddHistory", reflect.TypeOf((*MockHistoryStorage)(nil).AddHistory), dto)
}

// GetHistoryOfUser mocks base method.
func (m *MockHistoryStorage) GetHistoryOfUser(arg0 context.Context, arg1 *domain.HistoryOfUserGetDTO) (*[]domain.HistoryOfUser, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetHistoryOfUser", arg0, arg1)
	ret0, _ := ret[0].(*[]domain.HistoryOfUser)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetHistoryOfUser indicates an expected call of GetHistoryOfUser.
func (mr *MockHistoryStorageMockRecorder) GetHistoryOfUser(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetHistoryOfUser", reflect.TypeOf((*MockHistoryStorage)(nil).GetHistoryOfUser), arg0, arg1)
}
